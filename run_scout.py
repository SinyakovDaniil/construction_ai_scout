import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(__file__))

try:
    from src.main import ConstructionAIScout
    print("‚úÖ –ú–æ–¥—É–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤:")
    print(" - –ü–∞–ø–∫–∞ src/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    print(" - –§–∞–π–ª src/__init__.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç") 
    print(" - –§–∞–π–ª src/main.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    sys.exit(1)

def clear_screen():
    """–û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞"""
    os.system('cls' if os.name == 'nt' else 'clear')

def show_banner():
    """–ü–æ–∫–∞–∑–∞—Ç—å –±–∞–Ω–Ω–µ—Ä"""
    print("üöÄ –ò–ò-–†–ê–ó–í–ï–î–ß–ò–ö –î–õ–Ø –°–¢–†–û–ò–¢–ï–õ–¨–ù–´–• –ü–û–°–¢–ê–í–û–ö")
    print("üåê –° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ú –ü–ê–†–°–ò–ù–ì–û–ú –¶–ï–ù")
    print("=" * 55)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    clear_screen()
    show_banner()
    
    try:
        scout = ConstructionAIScout()
        
        while True:
            print("\nüìã –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ:")
            print("1 - üîÑ –ó–ê–ü–£–°–¢–ò–¢–¨ –ê–í–¢–û–ü–ê–†–°–ò–ù–ì –¶–ï–ù (—Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)")
            print("2 - üèÜ –ü–û–ö–ê–ó–ê–¢–¨ –õ–£–ß–®–ò–ï –¶–ï–ù–´ (–∏–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç—á–µ—Ç–∞)")
            print("3 - üìä –ü–û–°–ú–û–¢–†–ï–¢–¨ –ò–°–¢–û–†–ò–Æ –¶–ï–ù")
            print("4 - üè™ –ü–†–û–í–ï–†–ò–¢–¨ –ü–û–°–¢–ê–í–©–ò–ö–ê")
            print("5 - ‚öôÔ∏è  –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò")
            print("6 - üíæ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú (–∑–∞–≥–ª—É—à–∫–∏)")
            print("7 - ‚ùå –í–´–•–û–î")
            
            choice = input("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (1-7): ").strip()
            
            if choice == "1":
                clear_screen()
                show_banner()
                print("\nüåê –ó–ê–ü–£–°–ö –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ü–ê–†–°–ò–ù–ì–ê...")
                print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 2-3 –º–∏–Ω—É—Ç—ã...")
                print("üì° –ü–∞—Ä—Å–∏–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–æ–≤ –º–∞–≥–∞–∑–∏–Ω–æ–≤...")
                
                # –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –°–¢–†–û–ö–ê - –¥–æ–±–∞–≤–ª–µ–Ω use_parser=True
                report = scout.daily_scouting_report(use_parser=True)
                
                clear_screen()
                show_banner()
                print(f"\n‚úÖ {report['summary']}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                if report['materials_analysis']:
                    print(f"\nüèÜ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–ê–†–°–ò–ù–ì–ê ({len(report['materials_analysis'])} —Ç–æ–≤–∞—Ä–æ–≤):")
                    print("=" * 55)
                    
                    total_economy = 0
                    for i, item in enumerate(report['materials_analysis'], 1):
                        print(f"\n{i}. üì¶ {item['material']}:")
                        print(f"   üè™ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {item['best_supplier']}")
                        print(f"   üí∞ –¶–µ–Ω–∞: {item['best_price']} —Ä—É–±.")
                        if item.get('product_name'):
                            print(f"   üìù –¢–æ–≤–∞—Ä: {item['product_name']}")
                        if item.get('url'):
                            print(f"   üîó –°—Å—ã–ª–∫–∞: {item['url'][:80]}...")
                        print(f"   üíµ –≠–∫–æ–Ω–æ–º–∏—è: {item['economy']} —Ä—É–±.")
                        total_economy += item['economy']
                    
                    print(f"\nüí∞ –û–ë–©–ê–Ø –≠–ö–û–ù–û–ú–ò–Ø: {total_economy:.2f} —Ä—É–±.")
                    print(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: data/scout_report.csv")
                
                input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                clear_screen()
                show_banner()
                
            elif choice == "2":
                clear_screen()
                show_banner()
                print("\nüèÜ –õ–£–ß–®–ò–ï –¶–ï–ù–´ –ò–ó –ü–û–°–õ–ï–î–ù–ï–ì–û –û–¢–ß–ï–¢–ê:")
                print("=" * 55)
                
                try:
                    # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á–µ—Ç
                    prices_df = scout.price_monitor.get_all_prices(use_parser=False)
                    best_prices = scout.price_monitor.find_best_prices()
                    
                    if best_prices:
                        total_economy = 0
                        for i, item in enumerate(best_prices, 1):
                            print(f"\n{i}. üì¶ {item['material']}:")
                            print(f"   üè™ –õ—É—á—à–∏–π: {item['best_supplier']} - {item['best_price']} —Ä—É–±.")
                            if item.get('product_name'):
                                print(f"   üìù {item['product_name']}")
                            print(f"   üíµ –≠–∫–æ–Ω–æ–º–∏—è: {item['economy']} —Ä—É–±.")
                            
                            print(f"   üìä –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:")
                            for opt in item['all_options']:
                                marker = " üèÜ" if opt['supplier'] == item['best_supplier'] else ""
                                product_info = f" - {opt.get('product_name', '')}" if opt.get('product_name') else ""
                                print(f"      ‚Ä¢ {opt['supplier']}: {opt['price']} —Ä—É–±.{marker}{product_info}")
                            
                            total_economy += item['economy']
                        
                        print(f"\nüí∞ –û–ë–©–ê–Ø –≠–ö–û–ù–û–ú–ò–Ø: {total_economy:.2f} —Ä—É–±.")
                    else:
                        print("\n‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ (–∫–æ–º–∞–Ω–¥–∞ 1).")
                        
                except Exception as e:
                    print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
                    print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥ (–∫–æ–º–∞–Ω–¥–∞ 1).")
                
                input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                clear_screen()
                show_banner()
                
            elif choice == "3":
                clear_screen()
                show_banner()
                print("\nüìä –ò–°–¢–û–†–ò–Ø –¶–ï–ù:")
                print("=" * 55)
                
                materials = scout.get_available_materials()
                if materials:
                    print("\nüì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")
                    for i, material in enumerate(materials, 1):
                        print(f"   {i}. {material}")
                    
                    try:
                        material_choice = input("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞: ").strip()
                        if material_choice.isdigit() and 1 <= int(material_choice) <= len(materials):
                            selected_material = materials[int(material_choice) - 1]
                            history = scout.price_monitor.get_price_history(selected_material, days=30)
                            
                            if not history.empty:
                                print(f"\nüìà –ò—Å—Ç–æ—Ä–∏—è —Ü–µ–Ω –Ω–∞ '{selected_material}' (30 –¥–Ω–µ–π):")
                                print("-" * 55)
                                
                                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º
                                suppliers = history['supplier'].unique()
                                for supplier in suppliers:
                                    supplier_data = history[history['supplier'] == supplier]
                                    min_price = supplier_data['price'].min()
                                    max_price = supplier_data['price'].max()
                                    last_price = supplier_data.iloc[-1]['price']
                                    print(f"\nüè™ {supplier}:")
                                    print(f"   üìä –ú–∏–Ω: {min_price} —Ä—É–±.")
                                    print(f"   üìä –ú–∞–∫—Å: {max_price} —Ä—É–±.") 
                                    print(f"   üìä –¢–µ–∫—É—â–∞—è: {last_price} —Ä—É–±.")
                                    print(f"   üìÖ –ó–∞–ø–∏—Å–µ–π: {len(supplier_data)}")
                            else:
                                print(f"\n‚ùå –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è '{selected_material}'")
                        else:
                            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                    except ValueError:
                        print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
                else:
                    print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
                
                input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                clear_screen()
                show_banner()
                
            elif choice == "4":
                clear_screen()
                show_banner()
                print("\nüè™ –ü–†–û–í–ï–†–ö–ê –ü–û–°–¢–ê–í–©–ò–ö–ê:")
                print("=" * 55)
                
                suppliers = scout.get_available_suppliers()
                if suppliers:
                    print(f"\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏:")
                    for i, supplier in enumerate(suppliers, 1):
                        print(f"   {i}. {supplier}")
                    
                    try:
                        supplier_choice = input("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: ").strip()
                        if supplier_choice.isdigit() and 1 <= int(supplier_choice) <= len(suppliers):
                            selected_supplier = suppliers[int(supplier_choice) - 1]
                            result = scout.check_supplier(selected_supplier)
                            
                            if result:
                                print(f"\nüîç –ê–ù–ê–õ–ò–ó –ü–û–°–¢–ê–í–©–ò–ö–ê: {selected_supplier}")
                                print("-" * 55)
                                print(f"   üìä –†–µ–π—Ç–∏–Ω–≥ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏: {result['reliability_score']}/100")
                                print(f"   üè∑Ô∏è –°—Ç–∞—Ç—É—Å: {result['status']}")
                                print(f"   üì¶ –¢–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {result['materials_count']}")
                                print(f"   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {result['recommendation']}")
                                print(f"   üåê –°–∞–π—Ç: {result['url']}")
                                
                                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —ç—Ç–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                                prices_df = scout.price_monitor.get_all_prices(use_parser=False)
                                supplier_prices = prices_df[prices_df['supplier'] == selected_supplier]
                                if not supplier_prices.empty:
                                    print(f"\nüì¶ –¢–æ–≤–∞—Ä—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:")
                                    for _, row in supplier_prices.iterrows():
                                        print(f"   ‚Ä¢ {row['material']}: {row['price']} —Ä—É–±.")
                            else:
                                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ {selected_supplier}")
                        else:
                            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
                    except ValueError:
                        print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
                else:
                    print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
                
                input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                clear_screen()
                show_banner()
                
            elif choice == "5":
                clear_screen()
                show_banner()
                print("\n‚öôÔ∏è –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò:")
                print("=" * 55)
                
                materials = scout.get_available_materials()
                suppliers = scout.get_available_suppliers()
                
                print(f"\nüì¶ –û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú–´–ï –¢–û–í–ê–†–´ ({len(materials)}):")
                for i, material in enumerate(materials, 1):
                    print(f"   {i}. {material}")
                
                print(f"\nüè™ –û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú–´–ï –ú–ê–ì–ê–ó–ò–ù–´ ({len(suppliers)}):")
                for i, supplier in enumerate(suppliers, 1):
                    print(f"   {i}. {supplier}")
                
                print(f"\nüí° –ò–ù–°–¢–†–£–ö–¶–ò–Ø:")
                print("   1. –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ: config/config.yaml")
                print("   2. –í —Ä–∞–∑–¥–µ–ª–µ 'target_materials' –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã")
                print("   3. –í —Ä–∞–∑–¥–µ–ª–µ 'suppliers' –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã")
                print("   4. –î–ª—è –∞–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 1")
                
                input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                clear_screen()
                show_banner()
                
            elif choice == "6":
                clear_screen()
                show_banner()
                print("\nüíæ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú (–ó–ê–ì–õ–£–®–ö–ò):")
                print("=" * 55)
                print("üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥–∞...")
                
                report = scout.daily_scouting_report(use_parser=False)
                
                print(f"\n‚úÖ {report['summary']}")
                
                if report['materials_analysis']:
                    print(f"\nüèÜ –¢–ï–°–¢–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ ({len(report['materials_analysis'])} —Ç–æ–≤–∞—Ä–æ–≤):")
                    for item in report['materials_analysis']:
                        print(f"   üì¶ {item['material']}: {item['best_supplier']} - {item['best_price']} —Ä—É–±.")
                
                print("\nüí° –î–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É 1 (–ê–≤—Ç–æ–ø–∞—Ä—Å–∏–Ω–≥)")
                
                input("\n‚Üµ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")
                clear_screen()
                show_banner()
                
            elif choice == "7":
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –£–¥–∞—á–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫! üõí")
                break
                
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç 1 –¥–æ 7.")
                
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ config/config.yaml")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main()